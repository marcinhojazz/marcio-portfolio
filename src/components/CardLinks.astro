---
import { Image } from "astro:assets";
let { urlWebsite, title, image } = Astro.props;
---

<div class="bg-white rounded-lg flex flex-col md:flex-row lg:flex-row lg:items-center md:items-center overflow-hidden">
  <figure>
    {image && <Image src={image || null} alt={title} class="lg:w-32 md:w-64 h-36 object-cover"/>}
  </figure>
  <div class="p-4 w-full">
    <p class="text-2xl font-black">{title}</p>
    <button data-action="openModal" data-url={urlWebsite} class="text-sky-600">{urlWebsite}</button>
  </div>
</div>

<!-- Modal -->
<div id="modal" class="fixed border hidden flex top-0 left-0 w-full h-full bg-black bg-opacity-50 justify-center items-center px-4 lg:px-32 py-6">
  <div class="bg-white p-4 rounded-lg w-full h-full relative overflow-auto">
    <div class="flex justify-between items-center bg-gray-300 absolute h-[8%] w-full left-0 top-0 px-2 py-2">
      <div class=" flex gap-2">
        <div class="h-1.5 w-1.5 rounded-full bg-black"></div>
        <div class="h-1.5 w-1.5 rounded-full bg-black"></div>
        <div class="h-1.5 w-1.5 rounded-full bg-black"></div>
      </div>
      <div class="border flex items-center w-2/3 rounded-full bg-sky-100">
        <a target="_blank" href={urlWebsite} class="text-center w-full hover:underline">
          <div class="flex justify-center items-center gap-1 lg:gap-4">
            <p class="text-sm inline-block">{urlWebsite}</p>
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24"><path fill="currentColor" d="M5 21q-.825 0-1.413-.588T3 19V5q0-.825.588-1.413T5 3h7v2H5v14h14v-7h2v7q0 .825-.588 1.413T19 21H5Zm4.7-5.3l-1.4-1.4L17.6 5H14V3h7v7h-2V6.4l-9.3 9.3Z"/></svg>
          </div>
        </a>
      </div>
      <div class="">
        <button data-action="closeModal" class="">
          <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><path fill="currentColor" d="m8.4 17l3.6-3.6l3.6 3.6l1.4-1.4l-3.6-3.6L17 8.4L15.6 7L12 10.6L8.4 7L7 8.4l3.6 3.6L7 15.6L8.4 17Zm3.6 5q-2.075 0-3.9-.788t-3.175-2.137q-1.35-1.35-2.137-3.175T2 12q0-2.075.788-3.9t2.137-3.175q1.35-1.35 3.175-2.137T12 2q2.075 0 3.9.788t3.175 2.137q1.35 1.35 2.138 3.175T22 12q0 2.075-.788 3.9t-2.137 3.175q-1.35 1.35-3.175 2.138T12 22Z"/></svg>
        </button>
      </div>
    </div>
    <!-- <button data-action="closeModal" class="absolute top-2 right-2">X</button> -->
    <div id="iframeContainer" class="absolute bottom-0 left-0 h-[92%] mt-12 w-full "></div>
  </div>
</div>

<!-- ... (resto do código) ... -->

<script>
  const modal = document.getElementById('modal');
  const iframeContainer = document.getElementById('iframeContainer');

  // Função para abrir o modal
  function openModal(event) {
    const iframe = document.createElement('iframe');
    iframe.src = event.target.dataset.url;
    iframe.className = 'w-full h-full';
    iframeContainer.innerHTML = ''; // Clear previous iframe
    iframeContainer.appendChild(iframe);
    modal.classList.remove('hidden');
  }

  // Função para fechar o modal
  function closeModal() {
    modal.classList.add('hidden');
  }

  // Adicionando manipuladores de eventos
  const openModalButtons = document.querySelectorAll('[data-action="openModal"]');
  openModalButtons.forEach(button => {
    button.addEventListener('click', openModal);
  });

  const closeModalButton = document.querySelector('[data-action="closeModal"]');
  closeModalButton.addEventListener('click', closeModal);

  // Fechar o modal ao clicar fora dele
  modal.addEventListener('click', function(event) {
    if (event.target === modal) {
      closeModal();
    }
  });
</script>
